pipeline{
    agent any

    tools {nodejs "Nodejs14"}

   stages{
    stage('Initialize & Cleanup Workspace') {
        steps{
       println 'Initialize & Cleanup Workspace'
            cleanWs()
        }
    }

    stage('Git Clone') {
        steps{
        git url: 'https://github.com/ACsnyk/snyk-goof.git'
            sh 'ls -la'
            sh  "npm install"
        }
    }


    //Install the Snyk CLI with npm (for more information, check:https://docs.snyk.io/snyk-cli/install-the-snyk-cli )
    stage('Npm install Snyk CLI') {
        steps{
            script{
            sh 'npm install -g snyk'
            }
        }
    }

    // Authorize the Snyk CLI
        stage('Authorize Snyk CLI') {
            steps{
            withCredentials([string(credentialsId: 'Alexandra_Snyktoken', variable: 'SNYK_TOKEN_VAR')]) {    
            sh 'snyk auth ${SNYK_TOKEN_VAR}'
        }
    }
    }

     // Run snyk test to check for vulnerabilities 
        // Consider using --severity-threshold=<low|medium|high> for more granularity (see snyk help for more info).
        stage('Snyk Test using Snyk CLI') {
            steps {
                script{
                    try{
                sh 'snyk test'
                }
                catch (exception) {
                    println "[WARN] Snyk test command failed due to:\n${exception}"
                }
              }
            }
        }

        // Capture the dependency tree for ongoing monitoring in Snyk.
        // This is typically done after deployment to some environment (ex staging, test, production, etc).
        stage('Snyk Monitor using Snyk CLI') {
            steps {
                // Use your own Snyk Organization with --org=<your-org>
                sh 'snyk monitor --org=alexandra.catana'
            }
        }
    }
    post { 
        always { 
            cleanWs()
        }
    }    
}